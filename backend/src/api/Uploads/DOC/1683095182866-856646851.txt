export const updateOrder = async (req, res) => {
    try {
        if (req.file) {
            file = req.file.filename
        }
        let bond_pdf = 'N/A'
        let po_pdf = 'N/A'
        const order = req.body;
        const chkFileQuery = "SELECT PO_PDF, BOND_PDF FROM OrderBook WHERE OID=" + db.escape(order.oid)
        db.query(chkFileQuery, async (error, result) => {
            if (error) {
                res.status(500).json({
                    message: 'Something went wrong!',
                    payload: error
                })
            }
            if (result) {
                po_pdf = `${result[0].PO_PDF}`
                bond_pdf = `${result[0].BOND_PDF}`

                if (req.files) {
                    if (req.files.bond_pdf) {
                        bond_pdf = req.files.bond_pdf[0].filename
                        try {
                            const file = fs.readFileSync(`C:/Users/Arana Jayavihan/Desktop/Full Stack Projects/TSPL-Admin/server/uploads/bond_pdf/${bond_pdf}`)
                            const bOBuffer = Buffer.from(file)
                            console.log(bOBuffer)
                        }
                        catch (err){
                            console.log(err)
                        }
                        
                        
                    }
                    if (req.files.po_pdf) {
                        po_pdf = req.files.po_pdf[0].filename

                    }
                }
                const chkQuery = "SELECT * FROM OrderBook WHERE OID=" + db.escape(order.oid)
                db.query(chkQuery, async (error, result) => {
                    if (error) {
                        res.status(500).json({
                            message: 'Something went wrong!',
                            payload: error
                        })
                    }
                    else if (result) {
                        if (result.length != 0) {
                            const poPdfName = result[0].PO_PDF
                            const bondPdfName = result[0].BOND_PDF
                            const poPdfPath = `/app/uploads/po_pdf/${poPdfName}`
                            const bondPdfPath = `/app/uploads/bond_pdf/${bondPdfName}`
                            let Status = "Pending"
                            if (order.payment_status_tspl === 'Completed' && order.clearing_status === 'Completed' && order.invoice_status === 'Completed' && order.payment_status === 'Completed') {
                                Status = "Completed"
                            }
                            const query = "UPDATE OrderBook SET PO_DATE=" + db.escape(order.po_date) + ", PO_NUMBER=" + db.escape(order.po_number) + ", CUSTOMER=" + db.escape(order.customer) + ", SUPPLIER=" + db.escape(order.supplier) + ", DELEVERY_DATE=" + db.escape(order.delivery_date) + ", PERFORMANCE_BOND=" + db.escape(order.performance_bond) + ", AGREEMENT=" + db.escape(order.agreement) + ", PO_TO_SUPPLIER=" + db.escape(order.po_to_supplier) + ", PAYMENT_STATUS_TSPL=" + db.escape(order.payment_status_tspl) + ", SHIPMENT_DATE=" + db.escape(order.shipment_date) + ", DELIVERY_TERM=" + db.escape(order.delivery_term) + ", CLEARING_STATUS=" + db.escape(order.clearing_status) + ", INVOICE_STATUS=" + db.escape(order.invoice_status) + ", PAYMENT_STATUS=" + db.escape(order.payment_status) + `, PO_PDF='${po_pdf}', BOND_PDF='${bond_pdf}'` + `, Status='${Status}'` + " WHERE OID=" + db.escape(order.oid)
                            db.query(query, async (error, result) => {
                                if (error) {
                                    res.status(500).json({
                                        message: "Something went wrong",
                                        error: error
                                    })
                                }
                                else if (result) {
                                    try {
                                        if (poPdfName !== order.po_pdf) {
                                            fs.unlinkSync(poPdfPath)
                                        }
                                        if (bondPdfName !== order.bond_pdf) {
                                            fs.unlinkSync(bondPdfPath)
                                        }
                                    }
                                    catch (err) {
                                        console.log(err)
                                    }
                                    const selectQuery = "SELECT * FROM OrderBook ORDER BY Time DESC"
                                    db.query(selectQuery, async (error, result) => {
                                        if (error) {
                                            res.status(500).json({
                                                message: "Something went wrong",
                                                error: error
                                            })
                                        }
                                        else if (result) {
                                            res.status(201).json({
                                                message: "Inquiry updated!",
                                                payload: result
                                            })
                                        }
                                    })
                                }
                            })
                        }
                        else {
                            res.status(404).json({
                                message: 'Order not found!'
                            })
                        }
                    }
                })
            }
        })
    }

    catch (error) {
        console.log(error)
        res.status(500).json({
            message: "Something Went Wrong!",
            error: error
        })
    }
}